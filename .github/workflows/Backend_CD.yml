# name: Backend_CD

# on:
#   push:
#     branches:
#       - master
# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Build with Gradle
#       run: |
#         chmod +x ./gradlew
#         ./gradlew build
#     - name: Set up docker buildx
#       id: buildx
#       uses: docker/setup-buildx-action@v1

#     - name: Cache docker layers
#       uses: actions/cache@v2
#       with:
#         path: /tmp/.buildx-cache
#         key: ${{ runner.os }}-buildx-latest
#         restore-keys: |
#           ${{ runner.os }}-buildx-

#     - name: Login to ghcr
#       uses: docker/login-action@v1
#       with:
#         registry: ghcr.io
#         username: ${{ github.actor }}
#         password: ${{ secrets.CR_PAT }}

#     - name: Build and push
#       id: docker_build
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         builder: ${{ steps.buildx.outputs.name }}
#         push: ${{ github.event_name != 'pull_request' }}
#         tags: ghcr.io/depromeet/11th_5team:latest

#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         context: .
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ap-northeast-2

#     - name: Force new deploy ECS service
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       run: aws ecs update-service --cluster main --service api-server --force-new-deployment
    
#     - name: CD notification to Slack
#       uses: 8398a7/action-slack@v3
#       with:
#         status: ${{ job.status }}
#         fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
#         author_name: Backend CD
#       env:
#         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
